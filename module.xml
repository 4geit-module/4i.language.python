<?xml version="1.0"?>
<module name="4i.language.python" branch="master" description="Primitive 4i module to generate Python code">
  <module name="4i.language" required_branch="master"/>

  <todo>add a requirements test</todo>
  <todo>add a newline test</todo>
  <todo>add a comment test</todo>
  
  <gsl from="bootstrap__sh.gsl" output="bootstrap.sh" binary="True"/>
  <gsl from="launch__sh.gsl" output="launch.sh" binary="True"/>
  <gsl from="setup__py.gsl" output="setup.py" binary="True"/>
  
  <node name="project" pre_check="project_pre_check.gsl" pre="project_pre.gsl">
    <attribute name="python_version" required="True"/>
    <node name="requirements" virtual="True" copy="True" dst="requirements.txt">
      <node name="require" number="*" pre="require_pre.gsl" post="require_post.gsl">
	<attribute name="env"/>
	<attribute name="dev"/>
	<attribute name="name" required="True"/>
	<attribute name="operator"/>
	<attribute name="version"/>
	<attribute name="variable"/>
      </node> <!-- !require -->
    </node> <!-- !requirements -->
    <node name="output" number="*" pre="output_pre.gsl" post="output_post.gsl" post_end="output_post_end.gsl" dst="#(path)#(name).py" debug="True">
      <attribute name="name" required="True"/>
      <attribute name="binary" type="boolean"/>
      <node name="stmt" number="*" pre="stmt_pre.gsl" post="stmt_post.gsl"/>
      <node name="newline" number="*" pre="newline_pre.gsl" post="newline_post.gsl"/>
      <node name="comment" number="*" pre="comment_pre.gsl" post="comment_post.gsl"/>
      <node name="multicomment" number="*" pre="multicomment_pre.gsl" post="multicomment_post.gsl" post_end="multicomment_post_end.gsl">
	<node name="line" number="*" post="line_post.gsl"/>
	<node ref=":newline"/>
      </node> <!-- !multicomment -->
      <node name="def" number="*" pre="def_pre.gsl" post="def_post.gsl" post_end="def_post_end.gsl">
	<attribute name="name" required="True"/>
	<node name="arg" number="*">
	  <attribute name="name" required="True"/>
	  <attribute name="default"/>
	</node> <!-- !arg -->
	<node ref=":stmt"/>
	<node ref=":newline"/>
	<node ref=":comment"/>
	<node ref=":multicomment"/>
      </node> <!-- !def -->
      <node name="subclass" number="*" pre="class_pre.gsl" post="class_post.gsl" post_end="class_post_end.gsl">
	<attribute name="name" required="True"/>
	<attribute name="inherits"/>
	<node ref=":stmt"/>
	<node ref=":newline"/>
	<node ref=":comment"/>
	<node ref=":multicomment"/>
	<node ref=":def"/>
      </node> <!-- !subclass -->
      <node name="class" number="*" pre="class_pre.gsl" post="class_post.gsl" post_end="class_post_end.gsl">
	<attribute name="name" required="True"/>
	<attribute name="inherits"/>
	<node ref=":stmt"/>
	<node ref=":newline"/>
	<node ref=":comment"/>
	<node ref=":multicomment"/>
	<node ref=":def"/>
	<node ref=":subclass"/>
      </node> <!-- !class -->
      <node name="main" pre="main_pre.gsl" post="main_post.gsl" post_end="main_post_end.gsl" debug="True">
	<node ref=":stmt"/>
	<node ref=":newline"/>
	<node ref=":comment"/>
	<node ref=":multicomment"/>
	<node ref=":def"/>
	<node ref=":class"/>
      </node>
    </node> <!-- !output -->
    <node name="dir" number="*">
      <node ref=":output"/>
      <node ref=":dir"/>
    </node> <!-- !dir -->
    <node name="module" number="*">
      <node name="require" number="*" pre_combine="module_require_pre_combine.gsl" debug="True">
	<attribute name="env"/>
	<attribute name="dev"/>
	<attribute name="name" required="True"/>
	<attribute name="operator"/>
	<attribute name="version"/>
	<attribute name="variable"/>
      </node> <!-- !require -->
      <node ref=":output"/>
      <node ref=":dir"/>
    </node> <!-- !module -->
  </node> <!-- !project -->

  <test name="output" description="create a python file"/>
  <test name="assets" description="create assets files"/>
  <test name="stmt" description="create a python file with a single statement"/>
  <test name="main" description="create a python file with a single main scope"/>
  <test name="def" description="create a python file with a single function"/>
  <test name="class" description="create a python file with a single class"/>
</module>
